@using Ardita.Extensions;
@using Ardita.Models.ViewModels;
@model Ardita.Models.DbModels.TrxMediaStorageInActive;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = GlobalConst.ViewStart;
    FormModel form = Html.Form();

    bool isEditable = false;
    if (form.CurrentAction == GlobalConst.Add || form.CurrentAction == GlobalConst.Update)
    {
        isEditable = true;
    }
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Media Storage In Active</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action(GlobalConst.Index, GlobalConst.Home, new {Area = GlobalConst.General})"><i class="fa fa-home"></i></a>
            </li>
            <li class="breadcrumb-item">
                Archive Active
            </li>
            <li class="breadcrumb-item">
                <a href="@Url.Action(GlobalConst.Index, GlobalConst.MediaStorageInActive, new {Area = GlobalConst.ArchiveInActive})">Media Storage In Active</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>@form.LastBreadcrumb</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h5>Page</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="dropdown-toggle" data-toggle="dropdown" href="form_basic.html#">
                            <i class="fa fa-wrench"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-user">
                            <li>
                                <a href="form_basic.html#" class="dropdown-item">Config option 1</a>
                            </li>
                            <li>
                                <a href="form_basic.html#" class="dropdown-item">Config option 2</a>
                            </li>
                        </ul>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-sm-12">
                            <form role="form" id="formInput" enctype="multipart/form-data" asp-controller="@form.CurrentController" asp-area="@form.CurrentArea" asp-action="@form.FormAction">
                                <div class="row">
                                    <div class="col-sm-6 b-r">
                                        <div class="form-group">
                                            <label>Media Storage In Active Code</label>
                                            <input type="text" asp-for="MediaStorageInActiveCode" id="txtMediaStorageCode" class="form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)" />
                                            <input type="hidden" asp-for="StatusId" id="txtStatusId" />
                                            <input type="hidden" asp-for="IsActive" />
                                            <input type="hidden" asp-for="CreatedBy" />
                                            <input type="hidden" asp-for="CreatedDate" />
                                            <input type="hidden" asp-for="UpdatedBy" />
                                            <input type="hidden" asp-for="UpdatedDate" />
                                            <input type="hidden" asp-for="MediaStorageInActiveId" value="@Model.MediaStorageInActiveId">
                                        </div>
                                        <div class="form-group">
                                            <label>Archive Unit</label>
                                            <select asp-for="TypeStorage.ArchiveUnitId" asp-items="ViewBag.listArchiveUnit" (form.isInput ? GlobalConst.Required : GlobalConst.Disabled)
                                                    id="txtArchiveUnitId" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)"
                                                    data-placeholder="-- Select Archive Unit --">
                                                <option value=""></option>
                                            </select>
                                        </div>

                                        <div class="form-group">
                                            <label>Type Storage</label>
                                            <select asp-items="ViewBag.listTypeStorage" (form.isInput ? GlobalConst.Required : GlobalConst.Disabled)
                                                    id="txtTypeStorageId" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)" asp-for="TypeStorageId"
                                                    data-placeholder="-- Select Type Storage --">
                                                <option value=""></option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label>GMD Detail</label>
                                            <select id="txtGMDDetail" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)" asp-for="GmdDetailId" asp-items="ViewBag.listGMDDetail" data-placeholder="-- Pilih Bentuk Media Penyimpanan --"><option value=""></option></select>
                                        </div>
                                        <div class="form-group">
                                            <label>Satuan</label>
                                            <input readonly type="text" class="form-control" id="txtUnit" value="@(Model.GmdDetail == null ? "" : Model.GmdDetail.Unit)" />
                                        </div>
                                        <div class="form-group">
                                            <label>Jumlah</label>
                                            <input type="text" asp-for="TotalVolume" id="txtTotalVolume" class="form-control" readonly />
                                        </div>
                                        <div class="form-group">
                                            <label>Jumlah Tersedia</label>
                                            <input type="text" asp-for="DifferenceVolume" id="txtDifferenceVolume" class="form-control" readonly />
                                        </div>
                                    </div>
                                    <div class="col-sm-6">

                                        <div class="form-group">
                                            <label>Floor</label>
                                            <select asp-for="Row!.Level!.Rack!.Room!.FloorId!" asp-items="ViewBag.listFloor" (form.isInput ? GlobalConst.Required : GlobalConst.Disabled)
                                                    id="txtFloorId" class="select2_demo_1 form-control m-1 @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)"
                                                    data-placeholder="-- Select Floor --">
                                                <option value=""></option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label>Room</label>
                                            <select asp-for="Row!.Level!.Rack!.RoomId!" asp-items="ViewBag.listRoom" (form.isInput ? GlobalConst.Required : GlobalConst.Disabled)
                                                    id="txtRoomId" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)"
                                                    data-placeholder="-- Select Room --">
                                                <option value=""></option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label>Rack</label>
                                            <select asp-for="Row!.Level!.RackId!" asp-items="ViewBag.listRack" (form.isInput ? GlobalConst.Required : GlobalConst.Disabled)
                                                    id="txtRackId" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)"
                                                    data-placeholder="-- Select Rack --">
                                                <option value=""></option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label>Level</label>
                                            <select asp-for="Row.LevelId" asp-items="ViewBag.listLevel" (form.isInput ? GlobalConst.Required : GlobalConst.Disabled)
                                                    id="txtLevelId" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)"
                                                    data-placeholder="-- Select Level --">
                                                <option value=""></option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label>Row</label>
                                            <select asp-for="RowId" asp-items="ViewBag.listRow" (form.isInput ? GlobalConst.Required : GlobalConst.Disabled)
                                                    id="txtRowId" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)"
                                                    data-placeholder="-- Select Row --">
                                                <option value=""></option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label>Description</label>
                                            <textarea placeholder="" id="txtDesc" class="form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)" asp-for="Description"></textarea>
                                        </div>
                                    </div>
                                </div>
                                <div class="row border-top pt-3">
                                    <div class="col-sm-4">
                                        <div class="form-group">
                                            <label>Subjek Klasifikasi</label>
                                            <select asp-items="ViewBag.listSubject" (form.isInput ? GlobalConst.Required : GlobalConst.Disabled)
                                                    id="txtSubjectClassificationId" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)"
                                                    asp-for="SubSubjectClassification.SubjectClassificationId" onchange="initDropdown()"
                                                    data-placeholder="-- Select Subject Classification --">
                                                <option value=""></option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group">
                                            <label>Sub Subjek Klasifikasi</label>
                                            <select asp-items="ViewBag.listSubSubject" (form.isInput ? GlobalConst.Required : GlobalConst.Disabled)
                                                    id="txtSubSubjectClassificationId" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)"
                                                    asp-for="SubSubjectClassificationId"
                                                    data-placeholder="-- Select Sub Subject Classification --">
                                                <option value=""></option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group">
                                            <label>Tahun Arsip</label>
                                            <select (form.isInput ? GlobalConst.Required : GlobalConst.Disabled)
                                                    id="txtArchiveYear" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)" asp-for="ArchiveYear"
                                                    data-placeholder="-- Select Archive Year --">
                                                @for (int i = -20; i < 0; i++)
                                                {
                                                    <option value="@DateTime.Now.AddYears(i).ToString("yyyy")">@DateTime.Now.AddYears(i).ToString("yyyy")</option>
                                                }
                                                @if (form.CurrentAction == GlobalConst.Add)
                                                {
                                                    <option value="@DateTime.Now.ToString("yyyy")" selected>@DateTime.Now.ToString("yyyy")</option>
                                                }
                                                else
                                                {
                                                    <option value="@DateTime.Now.ToString("yyyy")">@DateTime.Now.ToString("yyyy")</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 b-r">
                                        @if (form.isInput)
                                        {
                                            <div class="form-group">
                                                <label>Sub Type Storage</label>
                                                <select (form.isInput ? GlobalConst.Required : GlobalConst.Disabled)
                                                        id="txtSubTypeStorageId" class="select2_demo_1 form-control"
                                                        data-placeholder="-- Select Sub Type Storage --">
                                                    <option value=""></option>
                                                </select>

                                                <button class="btn btn-sm @form.ButtonSubmitClass m-t-n-xs mr-1 mt-1"
                                                        type="button" id="btn-add-sts">
                                                    Add Sub Type Storage
                                                </button>
                                            </div>
                                        }

                                        <div class="detail">
                                            @*
                                            detail section
                                            dynamic from java script
                                            *@
                                        </div>
                                    </div>
                                </div>
                                <div>
                                    <a href="@Url.Action(GlobalConst.Index, form.CurrentController, new { Area = form.CurrentArea })"
                                       class="btn btn-sm btn-default float-right m-t-n-xs">
                                        @Html.Raw(form.BackText)
                                    </a>
                                    @if (form.isSubmitForm)
                                            {
                                                <button class="btn btn-sm @form.ButtonSubmitClass float-right m-t-n-xs mr-1"
                                                        onclick="onSubmit(this, event);"
                                                        type="submit" id="btn-submit" name="@GlobalConst.Submit" value="@GlobalConst.Save">
                                                    @Html.Raw(form.SaveText)
                                                </button>
                                                @if(form.CurrentAction != GlobalConst.Remove)
                                                {
                                                    <button
                                                        class="btn btn-sm btn-success float-right m-t-n-xs mr-1"
                                                        onclick="onSubmit(this, event);"
                                                        type="submit" id="btn-submit" name="@GlobalConst.Submit" value="@GlobalConst.Submit">
                                                        @Html.Raw(form.SubmitText)
                                                    </button>
                                                }
                                            }
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>


@section Scripts {
    <script type="text/javascript">
        var totalDetail = 0;
        var currentVolume = '@Model.TotalVolume';
        var url = '@Url.Action("BindArchiveById", form.CurrentController, new { Area = form.CurrentArea })';
        var listArchive = new Array();
        var isInput = @form.isInput.ToString().ToLower();

        $(function () {
            initDropdown();

            //$('#txtTypeStorageId').on('change', function () {
            //    $("#txtTotalVolume").val(0);
            //    $("#txtDifferenceVolume").val(0);
            //    if ($(this).val() != '') {
            //        getTypeStorageById($('#txtTypeStorageId').val());
            //    }
            //});

            $('#txtGMDDetail').on('change', function () {
                $("#txtTotalVolume").val(0);
                $("#txtDifferenceVolume").val(0);
                //initTableArchive();
                if ($(this).val() != '') {
                    getGMDDetail($(this));
                }
            });

            $("#btn-add-sts").click(function () {
                initSubTypeStorage();
            });

            if ("@form.CurrentAction" != "@GlobalConst.Add") 
            {
                @{var sort = 0;}
                @foreach (var d in Model.TrxMediaStorageInActiveDetails)
                {
                    @if(sort != d.Sort)
                    {
                        {
                            sort = d.Sort;
                        }
                        @:initSubTypeStorage("@d.SubTypeStorageId");
                    }
                    @:initArchive(@d.Sort, "@d.Sort", "@d.ArchiveId");
                }
            }
        });

        function getGMDDetail(e) {
            var url = '@Url.Action("BindGMDDetailVolumeByTypeStorageId", GlobalConst.MediaStorageInActive, new { Area = GlobalConst.ArchiveInActive })';
            var param = new Object();
            param.TypeStorageId = $('#txtTypeStorageId').val();
            param.GMDDetailId = e.val();

            ajaxcallreturn(url, 'POST', param, '', 'application/json; charset=UTF-8').then(function (result) {
                $('#txtTotalVolume').val(result[0].volume);
                $('#txtDifferenceVolume').val(result[0].volume);
                $('#txtUnit').val(result[0].unit);

                currentVolume = $('#txtDifferenceVolume').val();

                $('.detail').empty();
            });
        }

        function isFull(newVolume, totalDetail) {

            var totalVolumeSts = 0;

            $(".volume_" + totalDetail).each(function() {
                var volume = $(this).html();
                totalVolumeSts = parseInt(totalVolumeSts) + parseInt(volume);
            });

            totalVolumeSts = totalVolumeSts + parseInt(newVolume);

            if (totalVolumeSts > parseInt($("#sts-volume-" + totalDetail).text())) {
                alert("Volume Sub Type Storage Is Not Enough");
                return true;
            }

            return false;
        }

        function addArchive(totalDetail, sort) 
        {
            initArchive(totalDetail, sort);
        }

        function initSubTypeStorage(subTypeStorageId = "") {

            var stsId = subTypeStorageId != "" ? subTypeStorageId : $("#txtSubTypeStorageId").val();
            var sort = $(".sts").length + 1;

            if (subTypeStorageId == "") {
                if (stsId == "") {
                    alert("Pilih Dulu Sub Type Storage");
                    return false;
                }
            }

            totalDetail += 1;

            if(isInput)
            {
                $(".detail").append(`<div class="detail-${totalDetail} card mb-2"><div class="card-body"><div class="col-sm-4"><input type="hidden" name="listSts[]" value="${stsId}#${sort}" class="sts"><table class="table"><tr><td>Urutan</td><td>:</td><td><span><strong>${totalDetail}</strong></span></td></tr><tr><td>Kode Sub Media Penyimpanan</td><td>:</td><td><span id="sts-code-${totalDetail}"></span></td></tr><tr><td>Nama Sub Media Penyimpanan</td><td>:</td><td><span id="sts-name-${totalDetail}"></span></td></tr><tr><td>Jumlah</td><td>:</td><td><span id="sts-volume-${totalDetail}"></span></td></tr><tr><td>Satuan</td><td>:</td><td><span id="sts-unit-${totalDetail}"></span></td></tr></table></div><div class="col-sm-12"><select id="txtArchiveId_${totalDetail}" class="select2_demo_1 form-control" data-placeholder="-- Select Archive --"><option value=""></option></select></div><div class="col-sm-4"><button class="btn btn-sm btn-primary m-t-n-xs mr-1 mt-1 mb-2 btnInsertArchive" type="button" value="${sort}" onclick="addArchive(${totalDetail}, $(this).val())">Tambah Arsip</button></div><table class="table table-condensed table-hover" style="width:100%"><thead><tr><th style="width:10%">Action</th><th>Kode Arsip</th><th>Judul Arsip</th><th>Pemilik</th><th>Jumlah</th></tr></thead><tbody id="detail-${totalDetail}"></tbody></table><button class="btn btn-sm btn-danger m-t-n-xs mr-1 mt-1" type="button" onclick="deleteDetail(${totalDetail})">Hapus</button></div></div>`);
            }else
            {
                $(".detail").append(`<div class="detail-${totalDetail} card mb-2"><div class="card-body"><div class="col-sm-4"><input type="hidden" name="listSts[]" value="${stsId}#${sort}" class="sts"><table class="table"><tr><td>Urutan</td><td>:</td><td><span><strong>${totalDetail}</strong></span></td></tr><tr><td>Kode Sub Media Penyimpanan</td><td>:</td><td><span id="sts-code-${totalDetail}"></span></td></tr><tr><td>Nama Sub Media Penyimpanan</td><td>:</td><td><span id="sts-name-${totalDetail}"></span></td></tr><tr><td>Jumlah</td><td>:</td><td><span id="sts-volume-${totalDetail}"></span></td></tr><tr><td>Satuan</td><td>:</td><td><span id="sts-unit-${totalDetail}"></span></td></tr></table></div><div class="col-sm-4"><button style="display:none" class="btn btn-sm btn-primary m-t-n-xs mr-1 mt-1 mb-2 btnInsertArchive" type="button" value="${sort}" onclick="addArchive(${totalDetail}, $(this).val())">Tambah Arsip</button></div><table class="table table-condensed table-hover" style="width:100%"><thead><tr><th style="width:10%">Action</th><th>Kode Arsip</th><th>Judul Arsip</th><th>Pemilik</th><th>Jumlah</th></tr></thead><tbody id="detail-${totalDetail}"></tbody></table><button class="btn btn-sm btn-danger m-t-n-xs mr-1 mt-1" type="button" style="display:none" onclick="deleteDetail(${totalDetail})">Hapus</button></div></div>`);
            }

            getSubTypeStorageById(stsId, totalDetail);
            initDropdown();
        }

        function initArchive(totalDetail, sort, archiveId) {
            var isDuplicated = false;

            $(".archive-id").each(function () {
                var id = $(this).html();
                if (id == $("#txtArchiveId_" + totalDetail).val()) {
                    alert("duplicated");
                    isDuplicated = true;
                }
            });

            var arcId = archiveId != "" && archiveId != null && archiveId != undefined ? archiveId : $("#txtArchiveId_" + totalDetail).val();

            if (!isDuplicated) {
                $.ajax({
                    url: url,
                    type: "@GlobalConst.GET",
                    data: { Id: arcId },
                    dataType: "@GlobalConst.JSON",
                    contentType: "@GlobalConst.APPLICATIONJSON",
                    success: function (data) {
                        if (!isFull(data.volume, totalDetail)) {
                            if(isInput)
                            {
                               $("#detail-" + totalDetail).append(`<tr><td><i class='fa fa-trash' style='color:#ed5565;font-size:15px'></i></td><td style="display: none;" class="archive-id">${data.archiveId}</td><td>${data.archiveCode}</td><td>${data.titleArchive}</td><td>${data.archiveCreator}</td><td class="volume_${totalDetail}">${data.volume}</td><input type="hidden" name="listArchive[]" value="${data.archiveId}#${sort}" class="archive"/></tr>`);
                            }
                            else
                            {
                                $("#detail-" + totalDetail).append(`<tr><td><i class='fa fa-trash' style='color:#ed5565;font-size:15px;display:none'></i></td><td style="display: none;" class="archive-id">${data.archiveId}</td><td>${data.archiveCode}</td><td>${data.titleArchive}</td><td>${data.archiveCreator}</td><td class="volume_${totalDetail}">${data.volume}</td><input type="hidden" name="listArchive[]" value="${data.archiveId}#${sort}" class="archive"/></tr>`);
                            }
                        }
                    },
                    error: function () {
                        swal({
                            title: "Data Not Found",
                            text: "Data Archive Not Found! Call Administrator",
                            showConfirmButton: true,
                            allowOutsideClick: false,
                            type: "warning"
                        });
                    }
                });
            }
        }

        function deleteDetail(totalDetail) {
            var count = 1;

            currentVolume = currentVolume + parseInt($("#sts-volume-" + totalDetail).text());
            $("#txtDifferenceVolume").val(currentVolume);
            $(".detail-" + totalDetail).remove();

            $(".sts").each(function() {
                var value = $(this).val().split("#");
                var stsId = value[0];
                var existingSort = value[1];
                $(".archive").each(function() {
                    var valueArchive = $(this).val().split("#");
                    var arcId = value[0];
                    var existingSortArc = value[1];
                    if(existingSortArc == existingSort){
                        $(this).val(arcId + "#" + count);
                    }
                });
                $(".btnInsertArchive").each(function() {
                    var valueBtnArchive = $(this).val();
                    if(valueBtnArchive == existingSort){
                        $(this).val(count);
                    }
                });
                $(this).val(stsId + "#" + count);
                count ++;
            })
        }

        function getTypeStorageById(id) {
            var url = '@Url.Action(GlobalConst.BindTypeStorageById, form.CurrentController, new { Area = form.CurrentArea })';
            $.ajax({
                url: url,
                type: "@GlobalConst.GET",
                data: { Id: id },
                dataType: "@GlobalConst.JSON",
                contentType: "@GlobalConst.APPLICATIONJSON",
                success: function (data) {
                    $("#txtTotalVolume").val(data.volume);
                    $("#txtDifferenceVolume").val(data.volume);
                    currentVolume = $('#txtDifferenceVolume').val();
                },
                error: function () {
                    alert("Type Storage Not Found");
                }
            });
        }

        function getSubTypeStorageById(id, sort) {
            var url = '@Url.Action("BindGMDDetailVolumeBySubTypeStorageId", form.CurrentController, new { Area = form.CurrentArea })';
            $.ajax({
                url: url,
                type: "@GlobalConst.GET",
                data: { SubTypeStorageId: id, GMDDetailId: $('#txtGMDDetail').val() },
                dataType: "@GlobalConst.JSON",
                contentType: "@GlobalConst.APPLICATIONJSON",
                success: function (data) {
                    currentVolume = currentVolume - data.volume;
                    if (currentVolume < 0) {
                        currentVolume = currentVolume + data.volume;
                        alert("Volume Type Storage Not Enough!");
                        $(".detail-" + sort).remove();
                        return false;
                    }

                    $("#sts-code-" + sort).html('<b>' + data.code + '</b>');
                    $("#sts-name-" + sort).html('<b>' + data.name + '</b>');
                    $("#sts-volume-" + sort).html('<b class="subVolume">' + data.volume + '</b>');
                    $("#sts-unit-" + sort).html('<b class="subVolume">' + data.unit + '</b>');

                    //if ('@form.CurrentAction' != "Add") {
                    //    console.log(currentVolume);
                        
                    //}
                    $("#txtDifferenceVolume").val(currentVolume);
                },
                error: function () {
                    alert("Type Storage Not Found");
                }
            });
        }

        function initDropdown() {


            $('#txtGMDDetail').select2({
                minimumInputLength: 0,
                theme: 'bootstrap4',
                allowClear: true,
                ajax: {
                    url: '@Url.Action(GlobalConst.BindGMDDetailByTypeStorageId, GlobalConst.MediaStorageInActive, new { Area = GlobalConst.ArchiveInActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            param: params.term, id: $('#txtTypeStorageId').val()
                        }
                        return query;
                    },
                    processResults: function (data) {
                        return {
                            results: data
                        };
                    }
                }
            });

            $('#txtArchiveUnitId').on('change', function () {
                $('#txtTypeStorageId').val('').trigger('change');
                $('#txtFloorId').val('').trigger('change');
                $('#txtSubSubjectClassificationId').val('').trigger('change');
                $("#txtTotalVolume").val(0);
                $("#txtDifferenceVolume").val(0);
            });

            $('#txtSubSubjectClassificationId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Sub-Subject Classification --',
                ajax: {
                    url: '@Url.Action("BindSubSubjectClassificationBySubjectId", GlobalConst.MediaStorageInActive, new { Area = GlobalConst.ArchiveInActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            id: $('#txtArchiveUnitId').val(),
                            SubjectId: $('#txtSubjectClassificationId').val(),
                            param: params.term
                        }
                        return query;
                    },
                    processResults: function (data) {
                        return {
                            results: data
                        };
                    }
                }
            });

            $('#txtSubSubjectClassificationId').on('change', function () {
                for (let i = 1; i <= totalDetail; i++) {
                    $('#txtArchiveId_' + i).val('').trigger('change');
                }
            });

            for (let i = 1; i <= totalDetail; i++) {
                $('#txtArchiveId_' + i).select2({
                    theme: 'bootstrap4',
                    allowClear: true,
                    placeholder: '-- Select Archive --',
                    ajax: {
                        url: '@Url.Action("BindArchiveActiveBySubjectandGmdDetailId", GlobalConst.MediaStorageInActive, new { Area = GlobalConst.ArchiveInActive })',
                        type: "POST",
                        data: function (params) {
                            var query = {
                                id: $('#txtSubSubjectClassificationId').val(),
                                gmdDetailId: $('#txtGMDDetail').val(),
                                param: params.term
                            }
                            return query;
                        },
                        processResults: function (data) {
                            var dataResult = $.map(data, function (item) {
                                return {
                                    text: `Kode : ${item.archiveCode}, Judul Arsip : ${item.titleArchive}, Jumlah : ${item.volume}`,
                                    id: item.archiveId
                                }
                            });
                            return {
                                results: dataResult
                            };
                        }
                    }
                });

            }


            $('#txtTypeStorageId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Type Storage --',
                ajax: {
                    url: '@Url.Action(GlobalConst.BindTypeStorageByArchiveUnitId, GlobalConst.MediaStorageInActive, new { Area = GlobalConst.ArchiveInActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            id: $('#txtArchiveUnitId').val(),
                            param: params.term
                        }
                        return query;
                    },
                    processResults: function (data) {
                        var dataResult = $.map(data, function (item) {

                            return {
                                text: item.typeStorageName,
                                id: item.typeStorageId
                            }
                        });
                        return {
                            results: dataResult
                        };
                    }
                }
            });

            $('#txtTypeStorageId').on('change', function () {
                $('#txtSubTypeStorageId').val('').trigger('change');
            });

            $('#txtSubTypeStorageId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Sub Type Storage --',
                ajax: {
                    url: '@Url.Action("BindSubTypeStorageIdByGMDDetailID", GlobalConst.MediaStorageInActive, new { Area = GlobalConst.ArchiveInActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            param: params.term,
                            id: $('#txtTypeStorageId').val(),
                            GMDDetailId: $('#txtGMDDetail').val()
                        }
                        return query;
                    },
                    processResults: function (data) {
                        //var dataResult = $.map(data, function (item) {

                        //    return {
                        //        text: item.subTypeStorageCode + ' - ' + item.subTypeStorageName + ' - ' + item.volume,
                        //        id: item.subTypeStorageId
                        //    }
                        //});
                        return {
                            results: data
                        };
                    }
                }
            });
            $('#txtFloorId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Floor --',
                ajax: {
                    url: '@Url.Action(GlobalConst.BindFloorsByArchiveUnitId, GlobalConst.MediaStorageInActive, new { Area = GlobalConst.ArchiveInActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            id: $('#txtArchiveUnitId').val(),
                            param: params.term
                        }
                        return query;
                    },
                    processResults: function (data) {
                        var dataResult = $.map(data, function (item) {
                            return {
                                text: item.floorName,
                                id: item.floorId
                            }
                        });
                        return {
                            results: dataResult
                        };
                    }
                }
            });

            $('#txtFloorId').on('change', function () {
                $('#txtRoomId').val('').trigger('change');
            });
            $('#txtRoomId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Floor --',
                ajax: {
                    url: '@Url.Action(GlobalConst.BindRoomInActiveByFloorId, GlobalConst.MediaStorageInActive, new { Area = GlobalConst.ArchiveInActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            id: $('#txtFloorId').val(),
                            param: params.term
                        }
                        return query;
                    },
                    processResults: function (data) {
                        var dataResult = $.map(data, function (item) {
                            return {
                                text: item.roomName,
                                id: item.roomId
                            }
                        });
                        return {
                            results: dataResult
                        };
                    }
                }
            });

            $('#txtRoomId').on('change', function () {
                $('#txtRackId').val('').trigger('change');
            });
            $('#txtRackId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Floor --',
                ajax: {
                    url: '@Url.Action(GlobalConst.BindRackByRoomId, GlobalConst.MediaStorageInActive, new { Area = GlobalConst.ArchiveInActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            id: $('#txtRoomId').val(),
                            param: params.term
                        }
                        return query;
                    },
                    processResults: function (data) {
                        var dataResult = $.map(data, function (item) {
                            return {
                                text: item.rackName,
                                id: item.rackId
                            }
                        });
                        return {
                            results: dataResult
                        };
                    }
                }
            });

            $('#txtRackId').on('change', function () {
                $('#txtLevelId').val('').trigger('change');
            });
            $('#txtLevelId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Floor --',
                ajax: {
                    url: '@Url.Action(GlobalConst.BindLevelByRackId, GlobalConst.MediaStorageInActive, new { Area = GlobalConst.ArchiveInActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            id: $('#txtRackId').val(),
                            param: params.term
                        }
                        return query;
                    },
                    processResults: function (data) {
                        var dataResult = $.map(data, function (item) {
                            return {
                                text: item.levelName,
                                id: item.levelId
                            }
                        });
                        return {
                            results: dataResult
                        };
                    }
                }
            });

            $('#txtLevelId').on('change', function () {
                $('#txtRowId').val('').trigger('change');
            });
            $('#txtRowId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Floor --',
                ajax: {
                    url: '@Url.Action(GlobalConst.BindRowAvailableArchiveInActiveByLevelId, GlobalConst.MediaStorageInActive, new { Area = GlobalConst.ArchiveInActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            id: $('#txtLevelId').val(),
                            param: params.term
                        }
                        return query;
                    },
                    processResults: function (data) {
                        var dataResult = $.map(data, function (item) {
                            return {
                                text: item.rowName,
                                id: item.rowId
                            }
                        });
                        return {
                            results: dataResult
                        };
                    }
                }
            });
        }

        function validate() {
            let result = true;

            if ($(".archive-id").length < 1) {
                swal("Please insert Archive!");
                result = false;
            }

            if ($('#txtArchiveYear').val() == "") {
                swal("Please select Tahun Arsip");
                result = false;
            }

            if ($('#txtSubSubjectClassificationId').val() == "") {
                swal("Please select Sub Subjek Klasifikasi!");
                result = false;
            }

            if ($('#txtSubjectClassificationId').val() == "") {
                swal("Please select Subjek Klasifikasi!");
                result = false;
            }

            if ($('#txtDesc').val() == "") {
                swal("Please insert Description!");
                result = false;
            }

            if ($('#txtRowId').val() == "") {
                swal("Please select Row!");
                result = false;
            }

            if ($('#txtLevelId').val() == "") {
                swal("Please select Level!");
                result = false;
            }

            if ($('#txtRackId').val() == "") {
                swal("Please select Rack!");
                result = false;
            }

            if ($('#txtRoomId').val() == "") {
                swal("Please select Room!");
                result = false;
            }

            if ($('#txtFloorId').val() == "") {
                swal("Please select Floor!");
                result = false;
            }

            if ($('#txtGMDDetail').val() == "") {
                swal("Please select GMD Detail!");
                result = false;
            }

            if ($('#txtTypeStorageId').val() == "") {
                swal("Please select Type Storage!");
                result = false;
            }

            if ($('#txtArchiveUnitId').val() == "") {
                swal("Please select Archive Unit!");
                result = false;
            }

            if ($('#txtMediaStorageCode').val() == "") {
                swal("Please Insert Media Storage Code!");
                result = false;
            }

            return result;
        }

        function onSubmit(ctl, event) {
            event.preventDefault();
            swal({
                title: "Do You Want To " + "@form.CurrentAction" + " It?",
                text: "Please check Information before Submiting!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "@form.CurrentAction",
                cancelButtonText: "Cancel",
                closeOnConfirm: false,
                closeOnCancel: false
            },
                function (isConfirm) {
                    if (isConfirm) {
                        if (validate() == true) {
                            $('.confirm').prop('disabled', true);
                            $('.cancel').prop('disabled', true);
                            $('.cancel').hide();
                            $("#formInput").submit();
                        }
                    } else {
                        swal("Cancelled", "You have Cancelled Form Submission!", "error");
                    }
                });
        }

    </script>
}