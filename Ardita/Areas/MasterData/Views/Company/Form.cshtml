@using Ardita.Globals;
@model Ardita.Models.DbModels.MstCompany;
@using Ardita.Models.ViewModels;

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = Const.ViewStart;
    FormModel form = Html.Form();
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Data</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action(Const.Index, @form.CurrentController, new { Area = @form.CurrentArea})">Company</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Data</strong>
            </li>
            <li class="active breadcrumb-item">
                <strong>@form.LastBreadcrumb</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h5>Company</h5>
                </div>
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-sm-6 b-r">
                            <form role="form" id="frmCompany" enctype="multipart/form-data" asp-controller=@form.CurrentController asp-area=@form.CurrentArea asp-action=@form.FormAction>
                                <div class="form-group">
                                    <label>Company Code</label>
                                    <input type="text" placeholder="" id="txtCompanyCode" class="form-control" asp-for="@Model.CompanyCode">
                                    <input type="hidden" placeholder="" id="txtCompanyId" class="form-control" asp-for="@Model.CompanyId">
                                </div>
                                <div class="form-group">
                                    <label>Company Name</label>
                                    <input type="text" placeholder="" id="txtCompanyName" class="form-control" asp-for="@Model.CompanyName">
                                </div>
                                <div class="form-group">
                                    <label>Address</label>
                                    <textarea type="text" placeholder="" id="txtAddress" class="form-control" asp-for="@Model.Address">
                                    </textarea>
                                </div>
                                <div class="form-group">
                                    <label>Telephone</label>
                                    <input type="tel" placeholder="" id="txtTelephone" class="form-control" asp-for="@Model.Telepone">
                                </div>
                                <div class="form-group">
                                    <label>Email</label>
                                    <input type="email" placeholder="" id="txtEmail" class="form-control" asp-for="@Model.Email">
                                </div>
                                <div>
                                    <a href="@Url.Action(Const.Index, form.CurrentController, new { Area = @form.CurrentArea })" class="btn btn-sm btn-danger float-right m-t-n-xs">Cancel</a>
                                    <button onclick="onSubmit(this, event);" class="btn btn-sm btn-primary float-right m-t-n-xs mr-1" type="submit" id="btn-submit">@form.CurrentAction</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>


@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $("#txtEmployeeId").select2({
                theme: 'bootstrap4',
            });

            if ("@form.CurrentAction" == "@Const.Detail") {
                readonlyForm(true);
                $('#btn-submit').hide();
                $('#btn-cancel').html("Back");
            } else if ("@form.CurrentAction" == "@Const.Remove") {
                readonlyForm(true);
                $("#btn-submit").prop("disabled", false);
                $('#btn-submit').show();
            } 
            else {
                $('#btn-submit').show();
                readonlyForm(false);
            }

        });

        function readonlyForm(condition) {
            $('#frmCompany input').attr('readonly', condition);
            $('#frmCompany textarea').attr('readonly', condition);
        }

        function validate() {
            if ($('#txtCompanyCode').val() == "") {
                swal("Please enter Company Code !");
                return false;
            } else if ($('#txtCompanyName').val() == "") {
                swal("Please enter Company Name !");
                return false;
            } else {
                return true;
            }
        }

        function onSubmit(ctl, event) {
            event.preventDefault();
            swal({
                title: "Do You Want To @form.CurrentAction It?",
                text: "Please check Information before Submiting!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Save",
                cancelButtonText: "Cancel",
                closeOnConfirm: false,
                closeOnCancel: false
            },
                function (isConfirm) {
                    if (isConfirm) {
                        if (validate() == true) {
                            $('.confirm').prop('disabled', true);
                            $('.cancel').prop('disabled', true);
                            $('.cancel').hide();
                            $("#frmCompany").submit();
                        }
                    } else {
                        swal("Cancelled", "You have Cancelled Form Submission!", "error");
                    }
                });
        }


    </script>
}