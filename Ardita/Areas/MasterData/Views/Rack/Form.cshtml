@using Ardita.Globals;
@model Ardita.Models.DbModels.TrxRack
@using Ardita.Models.ViewModels;

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = Const.ViewStart;
    FormModel form = Html.Form();
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@Const.Rack</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action(Const.Index, Const.Home, new {Area = Const.General})"><i class="fa fa-home"></i></a>
            </li>
            <li class="breadcrumb-item">
                Master Data
            </li>
            <li class="breadcrumb-item">
                <a href="@Url.Action(Const.Index, Const.Rack, new {Area = Const.MasterData})">@Const.Rack</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>@form.LastBreadcrumb</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h5>@Const.Rack</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="dropdown-toggle" data-toggle="dropdown" href="form_basic.html#">
                            <i class="fa fa-wrench"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-user">
                            <li>
                                <a href="form_basic.html#" class="dropdown-item">Config option 1</a>
                            </li>
                            <li>
                                <a href="form_basic.html#" class="dropdown-item">Config option 2</a>
                            </li>
                        </ul>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-sm-6 b-r">
                            <form id="frmRack" method="post" role="form" enctype="multipart/form-data" asp-controller="@form.CurrentController" asp-area="@form.CurrentArea" asp-action="@form.FormAction" )">
                                @Html.AntiForgeryToken()
                                <div class="form-group">
                                    <div class="form-group">
                                        <label>Unit Kearsipan</label>
                                        <input type="hidden" asp-for="RackId" />
                                        <select id="txtArchiveUnitId" class="select2_demo_1 form-control @Html.Raw(form.isInput ? Const.Required : Const.Disabled)" asp-for="Room.Floor.ArchiveUnit.ArchiveUnitId" asp-items="ViewBag.listArchiveUnits" data-placeholder="-- Pilih Unit Kearsipan --"><option value=""></option></select>
                                    </div>
                                    <div class="form-group">
                                        <label>Lantai</label>
                                        <select id="txtFloorId" class="select2_demo_1 form-control @Html.Raw(form.isInput ? Const.Required : Const.Disabled)" asp-for="Room.Floor.FloorId" asp-items="ViewBag.listFloors" data-placeholder="-- Pilih Lantai --"><option value=""></option></select>
                                    </div>
                                    <div class="form-group">
                                        <label>Ruangan</label>
                                        <select id="txtRoomId" class="select2_demo_1 form-control @Html.Raw(form.isInput ? Const.Required : Const.Disabled)" asp-for="RoomId" asp-items="ViewBag.listRooms" data-placeholder="-- Pilih Ruangan --"><option value=""></option></select>
                                    </div>
                                    <div class="form-group">
                                        <label>Kode Rack</label>
                                        <input type="text" placeholder="" id="txtRackCode" class="form-control" asp-for="RackCode" value="@Model.RackCode">
                                    </div>
                                    <div class="form-group">
                                        <label>Nama Rack</label>
                                        <input type="text" placeholder="" id="txtRackName" class="form-control" asp-for="RackName" value="@Model.RackName">
                                    </div>
                                    <div class="form-group">
                                        <label>Panjang</label>
                                        <input type="number" placeholder="" id="txtRackLength" class="form-control" asp-for="Length" value="@Model.Length">
                                    </div>
                                </div>
                                <div>
                                    <a href="@Url.Action(Const.Index, Const.Rack, new {Area = Const.MasterData})" class="btn btn-sm btn-danger float-right m-t-n-xs" id="btn-cancel">Cancel</a>
                                    <button onclick="onSubmit(this, event);" class="btn btn-sm btn-primary float-right m-t-n-xs mr-1" type="submit" id="btn-submit">@form.FormAction</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            initForms("@form.CurrentAction");
            initDropdown();
        });

        function validate() {
            if ($('#txtRackCode').val() == "") {
                swal("Please enter Rack Code !");
                return false;
            } else if ($('#txtRackName').val() == "") {
                swal("Please enter Rack Name !");
                return false;
            } else if ($('#txtRackLength').val() == "") {
                swal("Please enter Rack Length !");
                return false;
            } else {
                return true;
            }
        }
        function onSubmit(ctl, event) {
            event.preventDefault();
            swal({
                title: "Do You Want To @form.CurrentAction It?",
                text: "Please check Information before Submiting!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Save",
                cancelButtonText: "Cancel",
                closeOnConfirm: false,
                closeOnCancel: false
            },
                function (isConfirm) {
                    if (isConfirm) {
                        if (validate() == true) {
                            $('.confirm').prop('disabled', true);
                            $('.cancel').prop('disabled', true);
                            $('.cancel').hide();
                            $("#frmRack").submit();
                        }
                    } else {
                        swal("Cancelled", "You have Cancelled Form Submission!", "error");
                    }
                });
        }
        function initDropdown() {
            $('#txtArchiveId').on('change', function () {
                $('#txtFloorId').val('').trigger('change');
            });

            $('#txtFloorId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Floor --',
                ajax: {
                    url: '@Url.Action(Const.BindFloorsByArchiveUnitId, Const.Rack, new { Area = Const.MasterData })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            id: $('#txtArchiveUnitId').val(),
                        }
                        return query;
                    },
                    processResults: function (data) {
                        var dataResult = $.map(data, function (item) {
                            return {
                                text: item.floorName,
                                id: item.floorId
                            }
                        });
                        return {
                            results: dataResult
                        };
                    }
                }
            });

            $('#txtFloorId').on('change', function () {
                $('#txtRoomId').val('').trigger('change');
            });
            $('#txtRoomId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Floor --',
                ajax: {
                    url: '@Url.Action(Const.BindRoomByFloorId, Const.Rack, new { Area = Const.MasterData })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            id: $('#txtFloorId').val(),
                        }
                        return query;
                    },
                    processResults: function (data) {
                        var dataResult = $.map(data, function (item) {
                            return {
                                text: item.roomName,
                                id: item.roomId
                            }
                        });
                        return {
                            results: dataResult
                        };
                    }
                }
            });

        }

       
    </script>
}