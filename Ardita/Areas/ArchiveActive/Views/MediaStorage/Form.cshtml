@using Ardita.Extensions;
@using Ardita.Models.ViewModels;
@using Ardita.Models.DbModels;
@model Ardita.Models.DbModels.TrxMediaStorage;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = GlobalConst.ViewStart;
    FormModel form = Html.Form();

    bool isEditable = false;
    if (form.CurrentAction == GlobalConst.Add || form.CurrentAction == GlobalConst.Update)
    {
        isEditable = true;
    }
    int i = 0;
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Media Storage</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action(GlobalConst.Index, GlobalConst.Home, new {Area = GlobalConst.General})"><i class="fa fa-home"></i></a>
            </li>
            <li class="breadcrumb-item">
                Archive Active
            </li>
            <li class="breadcrumb-item">
                <a href="@Url.Action(GlobalConst.Index, GlobalConst.MediaStorage, new {Area = GlobalConst.ArchiveActive})">Media Storage</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>@form.LastBreadcrumb</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h5>Page</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="dropdown-toggle" data-toggle="dropdown" href="form_basic.html#">
                            <i class="fa fa-wrench"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-user">
                            <li>
                                <a href="form_basic.html#" class="dropdown-item">Config option 1</a>
                            </li>
                            <li>
                                <a href="form_basic.html#" class="dropdown-item">Config option 2</a>
                            </li>
                        </ul>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-sm-12">
                            <form role="form" id="formInput" enctype="multipart/form-data" asp-controller="@form.CurrentController" asp-area="@form.CurrentArea" asp-action="@form.FormAction">
                                <div class="row">
                                    <div class="col-sm-6 b-r">
                                        <div class="form-group">
                                            <label>Kode Media Penyimpanan</label>
                                            <input type="text" asp-for="MediaStorageCode" id="txtMediaStorageCode" class="form-control" readonly />
                                            <input type="hidden" asp-for="StatusId" id="txtStatusId" />
                                            <input type="hidden" asp-for="MediaStorageId" value="@Model.MediaStorageId">
                                            <input type="hidden" asp-for="CreatedBy">
                                            <input type="hidden" asp-for="CreatedDate">
                                            <input type="hidden" asp-for="IsActive">
                                        </div>
                                        <div class="form-group">
                                            <label>Lokasi</label>
                                            <select asp-for="TypeStorage.ArchiveUnitId" asp-items="ViewBag.listArchiveUnit"
                                                    id="txtArchiveUnitId" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)"
                                                    data-placeholder="-- Pilih Lokasi --">
                                                <option value=""></option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label>Jenis Penyimpanan</label>
                                            <select asp-items="ViewBag.listTypeStorage"
                                                    id="txtTypeStorageId" class="select2_demo_1 form-control  @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)" asp-for="TypeStorageId"
                                                    data-placeholder="-- Pilih Jenis Media Penyimpanan --">
                                                <option value=""></option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label>GMD Detail</label>
                                            <select id="txtGMDDetail" onchange="getGMDDetail($(this))" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)" asp-for="GmdDetailId" asp-items="ViewBag.listGMDDetail" data-placeholder="-- Pilih Bentuk Media Penyimpanan --"><option value=""></option></select>
                                        </div>
                                        <div class="form-group">
                                            <label>Satuan</label>
                                            <input readonly type="text" class="form-control" id="txtUnit" value="@(Model.GmdDetail == null ? "" : Model.GmdDetail.Unit)" />
                                        </div>
                                        <div class="form-group">
                                            <label>Jumlah</label>
                                            <input type="text" asp-for="TotalVolume" id="txtTotalVolume" class="form-control readonly" readonly />
                                        </div>
                                        <div class="form-group">
                                            <label>Jumlah Tersedia</label>
                                            <input type="text" asp-for="DifferenceVolume" id="txtDifferenceVolume" class="form-control readonly" readonly />
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label>Lantai</label>
                                            <select asp-for="Row!.Level!.Rack!.Room!.FloorId!" asp-items="ViewBag.listFloor"
                                                    id="txtFloorId" class="select2_demo_1 form-control m-1 @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)"
                                                    data-placeholder="-- Pilih Lantai --">
                                                <option value=""></option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label>Ruangan</label>
                                            <select asp-for="Row!.Level!.Rack!.RoomId!" asp-items="ViewBag.listRoom"
                                                    id="txtRoomId" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)"
                                                    data-placeholder="-- Pilih Ruangan --">
                                                <option value=""></option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label>Rak</label>
                                            <select asp-for="Row!.Level!.RackId!" asp-items="ViewBag.listRack"
                                                    id="txtRackId" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)"
                                                    data-placeholder="-- Pilih Rak --">
                                                <option value=""></option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label>Tingkat</label>
                                            <select asp-for="Row.LevelId" asp-items="ViewBag.listLevel"
                                                    id="txtLevelId" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)"
                                                    data-placeholder="-- Pilih Tingkat --">
                                                <option value=""></option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label>Baris</label>
                                            <select asp-for="RowId" asp-items="ViewBag.listRow"
                                                    id="txtRowId" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)"
                                                    data-placeholder="-- Pilih Baris --">
                                                <option value=""></option>
                                            </select>
                                        </div>
                                        @if (isEditable)
                                        {
                                            
                                            @*<div class="form-group">
                                                <label>Archive</label>
                                                <select id="txtArchiveId"
                                                        class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)"
                                                    asp-items="ViewBag.listArchive"
                                                        data-placeholder="-- Select Archive --">
                                                    <option value=""></option>
                                                </select>
                                            </div>*@

                                            @*<button class="btn btn-success btn-sm pull-right mb-5"
                                                    type="button" id="add-archive">
                                                <i class="fa fa-plus"></i> Add Archive
                                            </button>*@
                                        }
                                        
                                    </div>
                                </div>
                                <div class="row border-top pt-3">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label>Subjek Klasifikasi</label>
                                            <select asp-for="SubjectClassificationId" asp-items="ViewBag.listSubSubject"
                                                    id="txtSubSubjectClassificationId" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)"
                                                    data-placeholder="-- Pilih Subjek Klasifikasi --">
                                                <option value=""></option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label>Tahun Arsip</label>
                                            <input type="month" id="txtYear" class="form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)" asp-for="ArchiveYear" />
                                            @*<select asp-for="ArchiveYear"
                                                    id="txtYear" class="select2_demo_1 form-control @Html.Raw(form.isInput ? GlobalConst.Required : GlobalConst.Disabled)"
                                                    data-placeholder="-- Pilih Tahun Arsip --">
                                                <option value=""></option>
                                                @for (int i = -20; i < 0; i++)
                                                {
                                                    <option value="@DateTime.Now.AddYears(i).ToString("yyyy")">@DateTime.Now.AddYears(i).ToString("yyyy")</option>
                                                }
                                                @if (form.CurrentAction == GlobalConst.Add)
                                                {
                                                    <option value="@DateTime.Now.ToString("yyyy")" selected>@DateTime.Now.ToString("yyyy")</option>
                                                }
                                                else
                                                {
                                                    <option value="@DateTime.Now.ToString("yyyy")">@DateTime.Now.ToString("yyyy")</option>
                                                }
                                            </select>*@
                                        </div>
                                    </div>
                                </div>
                                <div class="row mt-2">
                                    <div class="col-lg-12" id="data-table" style="min-height: 200px">
                                        <div class="sk-spinner sk-spinner-circle">
                                            <div class="sk-circle1 sk-circle"></div>
                                            <div class="sk-circle2 sk-circle"></div>
                                            <div class="sk-circle3 sk-circle"></div>
                                            <div class="sk-circle4 sk-circle"></div>
                                            <div class="sk-circle5 sk-circle"></div>
                                            <div class="sk-circle6 sk-circle"></div>
                                            <div class="sk-circle7 sk-circle"></div>
                                            <div class="sk-circle8 sk-circle"></div>
                                            <div class="sk-circle9 sk-circle"></div>
                                            <div class="sk-circle10 sk-circle"></div>
                                            <div class="sk-circle11 sk-circle"></div>
                                            <div class="sk-circle12 sk-circle"></div>
                                        </div>
                                        @if(form.CurrentAction != GlobalConst.IsUsed)
                                        {
                                            <table id="table-archive" class="table table-condensed mt-2" style="border-radius: unset;width:100%">
                                                <thead>
                                                    <tr>
                                                        <th>No</th>
                                                        <th>Sub-subjek Klasifikasi</th>
                                                        <th>Nomor Arsip</th>
                                                        <th>Judul Arsip</th>
                                                        <th>Tingkat Perkembangan</th>
                                                        <th>Unit Pencipta</th>
                                                        <th>Jumlah</th>
                                                        <th>Detail</th>
                                                        <th style="display:flex;flex-direction:column;text-align:center;padding-right:8px !important"><label for="checkAll" class="text-center">Pilih Semua </label><input type="checkbox" id="checkAll" required /></th>
                                                    </tr>
                                                </thead>
                                                <tbody id="listdtl">
                                                </tbody>
                                            </table>
                                        }
                                        else
                                        {
                                            <div class="tabs-container">
                                                <ul class="nav nav-tabs" role="tablist">
                                                    <li><a class="nav-link active" data-toggle="tab" href="#tab-1">Registrasi</a></li>
                                                    <li><a class="nav-link" data-toggle="tab" href="#tab-2">History</a></li>
                                                </ul>
                                                <div class="tab-content">
                                                    <div role="tabpanel" id="tab-1" class="tab-pane active">
                                                        <div class="panel-body">
                                                            <table id="table-archive" class="table table-condensed mt-2" style="border-radius: unset;width:100%">
                                                                <thead>
                                                                    <tr>
                                                                        <th>No</th>
                                                                        <th>Sub-subjek Klasifikasi</th>
                                                                        <th>Nomor Arsip</th>
                                                                        <th>Judul Arsip</th>
                                                                        <th>Tingkat Perkembangan</th>
                                                                        <th>Unit Pencipta</th>
                                                                        <th>Jumlah</th>
                                                                        <th>Detail</th>
                                                                        <th style="display:flex;flex-direction:column;text-align:center;padding-right:8px !important"><label for="checkAllIsUsed" class="text-center">Gunakan Semua</label><input type="checkbox" id="checkAllIsUsed" /></th>
                                                                        <th>Pengguna</th>
                                                                        <th>Tanggal Penggunaaan</th>
                                                                        <th>Tanggal Pengembalian</th>
                                                                        <th>Status</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody id="listdtl">
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                    <div role="tabpanel" id="tab-2" class="tab-pane">
                                                        <div class="panel-body">
                                                            <table id="table-history" class="table table-condensed mt-2" style="border-radius: unset;width:100%">
                                                                <thead>
                                                                    <tr>
                                                                        <th>No</th>
                                                                        <th>Nomor Dokumen</th>
                                                                        <th>Judul Arsip</th>
                                                                        <th>Tingkat Perkembangan</th>
                                                                        <th>Unit Pencipta</th>
                                                                        <th>Jumlah</th>
                                                                        <th>Pengguna</th>
                                                                        <th>Tanggal Penggunaaan</th>
                                                                        <th>Tanggal Pengembalian</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    @if(ViewBag.DetailOutIndicatior.Count > 0)
                                                                    {
                                                                        foreach (TrxArchiveOutIndicator item in ViewBag.DetailOutIndicatior)
                                                                        {
                                                                            if(item.ReturnDate != null)
                                                                            {
                                                                                <tr>
                                                                                    <td>@(++i)</td>
                                                                                    <td>@item.Archive.DocumentNo</td>
                                                                                    <td>@item.Archive.TitleArchive</td>
                                                                                    <td>@item.Archive.ArchiveType.ArchiveTypeName</td>
                                                                                    <td>@item.Archive.Creator.CreatorName</td>
                                                                                    <td>@item.Archive.Volume</td>
                                                                                    <td>@item.UsedBy</td>
                                                                                    <td>@item.UsedDate.ToString("dddd, dd MMMM yyyy")</td>
                                                                                    <td>@(((DateTime)item.ReturnDate).ToString("dddd, dd MMMM yyyy"))</td>
                                                                                </tr>
                                                                            }
                                                                        }
                                                                    }
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <br />
                                        }
                                        <div id="listArchiveId"></div> @*this div for containing list archive id values send to controller*@
                                    </div>
                                    <div class="col-lg-12">
                                        <div class="form-group">
                                            <a href="@Url.Action(GlobalConst.Index, form.CurrentController, new { Area = form.CurrentArea })"
                                                   class="btn btn-sm btn-default float-right m-t-n-xs">
                                                @Html.Raw(form.BackText)
                                            </a>
                                            @if (form.isSubmitForm || form.CurrentAction == GlobalConst.IsUsed)
                                            {
                                                
                                                @if(form.CurrentAction != GlobalConst.Remove && form.CurrentAction != GlobalConst.IsUsed)
                                                {
                                                    @if (Model.StatusId != (int)GlobalConst.STATUS.Submit)
                                                    {
                                                        <button class="btn btn-sm @form.ButtonSubmitClass float-right m-t-n-xs mr-1"
                                                                type="submit" id="btn-submit"
                                                                name="@GlobalConst.Submit"
                                                                value="@(form.CurrentAction == @GlobalConst.IsUsed ? @GlobalConst.IsUsed : @GlobalConst.Save)">
                                                            @Html.Raw(form.SaveText)
                                                        </button>
                                                    }
                                                    <button
                                                        class="btn btn-sm btn-success float-right m-t-n-xs mr-1"
                                                        type="submit" id="btn-submit" name="@GlobalConst.Submit" value="@GlobalConst.Submit">
                                                        @Html.Raw(form.SubmitText)
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-sm @form.ButtonSubmitClass float-right m-t-n-xs mr-1"
                                                            type="submit" id="btn-submit"
                                                            name="@GlobalConst.Submit"
                                                            value="@(form.CurrentAction == @GlobalConst.IsUsed ? @GlobalConst.IsUsed : @GlobalConst.Save)">
                                                        @Html.Raw(form.SaveText)
                                                    </button>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
@section Styles {
    <style>
        #data-table > .sk-spinner {
            display: none;
        }

        #data-table.sk-loading {
            position: relative;
        }

            #data-table.sk-loading > .sk-spinner {
                display: block;
                position: absolute;
                top: 40%;
                left: 0;
                right: 0;
                z-index: 3000;
            }

            #data-table.sk-loading:after {
                content: '';
                background-color: rgba(255, 255, 255, 0.7);
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                z-index: 2999;
            }
    </style>
}

@section Scripts {
    <script type="text/javascript">
        var listArchiveId = [];
        var totalCurrentVolume = 0;

        $(document).ready(function () {
            initDropdown();
            initTableArchive();

            $('#txtGMDDetail').on('change', function () {
                $("#txtTotalVolume").val(0);
                $("#txtDifferenceVolume").val(0);
                initTableArchive();
                if ($(this).val() != '') {
                    getGMDDetail($(this));
                }
            });

            $('#txtSubSubjectClassificationId').on('change', function () {
                if ($(this).val() != '') {
                    initTableArchive();
                }
            });

            $('#txtYear').on('change', function () {
                if ($(this).val() != '') {
                    initTableArchive();
                }
            });

            $('#checkAll').on('change', function () {
                var checked = $(this).prop('checked');

                var sisaVolume = $('#txtDifferenceVolume').val() == '' ? 0 : parseInt($('#txtDifferenceVolume').val());
                $(`.check`).each(function () {
                    $(this).prop('checked', checked);
                    var rowVolume = parseInt($(this).data('volume'));
                    if(checked){
                        if(rowVolume > sisaVolume){
                            swal({ title: "Failed!", text: 'Volume Arsip Melebihi Batas Penyimpanan, Silahkan Pilih Arsip lain!', type: "info" }, function () {
                                $('#checkAll').prop('checked', false);
                                $(`.check`).prop('checked', false);
                                $('#txtDifferenceVolume').val($('#txtTotalVolume').val());
                            });
                            return;
                        }
                        sisaVolume = sisaVolume - rowVolume;
                        $('#txtDifferenceVolume').val(sisaVolume);
                    }
                    else{
                        $('#txtDifferenceVolume').val($('#txtTotalVolume').val());
                    }
                });
            });

        });

        function getGMDDetail(e) {
            var url = '@Url.Action("BindGMDDetailVolumeByTypeStorageId", GlobalConst.ArchiveMovement, new { Area = GlobalConst.ArchiveActive })';
            var param = new Object();
            param.TypeStorageId = $('#txtTypeStorageId').val();
            param.GMDDetailId = e.val();

            ajaxcallreturn(url, 'POST', param, '', 'application/json; charset=UTF-8').then(function (result) {
                $('#txtTotalVolume').val(result[0].volume);
                $('#txtDifferenceVolume').val(result[0].volume);
                $('#txtUnit').val(result[0].unit);
            });
        }

        function checkValidate(e, rowVolume) {
            var sisaVolume = $('#txtDifferenceVolume').val() == '' ? 0 : parseInt($('#txtDifferenceVolume').val());
            if(e.prop('checked')){
                if (rowVolume > sisaVolume) {
                    swal({ title: "Failed!", text: 'Volume Arsip Melebihi Batas Penyimpanan, Silahkan Pilih Arsip lain!', type: "info" });
                    e.prop('checked', false);
                }else{
                    $('#txtDifferenceVolume').val(sisaVolume - rowVolume);
                }
            }else{
                $('#txtDifferenceVolume').val(sisaVolume + rowVolume);
            }

            var getDataChecked = $('.check').serialize();
            if (getDataChecked == '') {
                $('#checkAll').prop('required', true);
            }
            else{
                $('#checkAll').prop('required', false);
            }
        }

        function initTableArchive(){
            $('#table-archive').hide();
            $('#data-table').toggleClass('sk-loading');
            var url = '@Url.Action(GlobalConst.BindArchivesBySubSubjectClassificationId, GlobalConst.MediaStorage, new { Area = GlobalConst.ArchiveActive })';
            var param = new Object();
            param.Id = $('#txtSubSubjectClassificationId').val();
            param.mediaStorageId = '@Model.MediaStorageId'
            param.year = $('#txtYear').val();
            param.gmdDetailId = $('#txtGMDDetail').val();

            ajaxcallreturn(url, 'POST', param, '', 'application/json; charset=UTF-8').then(function (result) {
                var dataRes = [];
                if(@form.isInput.ToString().ToLower()){
                    dataRes = result;
                    $.each(result, function (key, value) {
                        if (value.trxMediaStorageDetails.length > 0) {
                             $('#checkAll').prop('required', false);
                        }
                    });
                }else{
                    if('@form.CurrentAction' == 'IsUsed'){
                        $('#checkAll').prop('required', false);
                    }

                    $.each(result, function (key, value) {
                        if (value.trxMediaStorageDetails.length > 0) {
                            dataRes.push(value);
                        }
                    });
                }
                $('#table-archive').show();
                $('#table-archive').DataTable().destroy();
                if('@form.CurrentAction' == '@GlobalConst.IsUsed'){
                    $('#table-history').DataTable();

                    $('#table-archive').DataTable({
                        data: dataRes,
                        lengthMenu: [100],
                        columnDefs: [
                            {
                                targets: [8],
                                className: 'd-none'
                            },
                            {
                                targets: [8],
                                orderDataType: 'dom-checkbox'
                            }
                        ],
                        columns: [
                            {
                                "data": "archiveId", "orderable": false, "searchable": false, "render": function (data, type, row, meta) {
                                    return meta.row + meta.settings._iDisplayStart + 1;
                                }
                            },
                            { "data": "subSubjectClassification.subSubjectClassificationName", "name": "subSubjectClassification.subSubjectClassificationName", "autoWidth": true },
                            { "data": "archiveCode", "name": "archiveCode", "autoWidth": true },
                            { "data": "titleArchive", "name": "titleArchive", "autoWidth": true },
                            { "data": "archiveType.archiveTypeName", "name": "archiveType.archiveTypeName", "autoWidth": true },
                            { "data": "creator.creatorName", "name": "creator.creatorName", "autoWidth": true },
                            { "data": "volume", "name": "volume", "autoWidth": true },
                            {
                                "data": "archiveId", "orderable": false, "searchable": false, "render": function (data, type, row, meta) {
                                    var modal = `<div id="myModal${data}" class="modal fade" aria-hidden="true">
                                                        <div class="modal-dialog modal-lg">
                                                            <div class="modal-content">
                                                                <div class="modal-header">
                                                                    <h2 class="modal-title">Preview</h2>
                                                                </div>
                                                                <div class="modal-body">
                                                                    <div class="row">
                                                                        <div class="col-lg-12">
                                                                                    <object data="@Url.Action(GlobalConst.DetailArchive, GlobalConst.MediaStorage, new { Area = GlobalConst.ArchiveActive, Id = "-1AingMaung" })" style="width:100%; height:500px">
                                                                                        <embed src="@Url.Action(GlobalConst.DetailArchive, GlobalConst.MediaStorage, new { Area = GlobalConst.ArchiveActive, Id = "-1AingMaung" })" style="width:100%;height:500px" />
                                                                            </object>
                                                                        </div>
                                                                    </div>
                                                                    <hr />
                                                                </div>
                                                            </div>
                                                        </div>
                                                            </div>`.replace('-1AingMaung', data);
                                    return modal + `<a data-toggle="modal" href="#myModal${data}" class="btn btn-sm btn-warning"><i class="fa fa-eye"></i> </a>`;
                                }
                            },
                            {
                                "data": "archiveId", "orderable": false, "searchable": false, "render": function (data, type, row, meta) {
                                    return `<input type="checkbox" class="check2" value='${data}' name="detailIsUsed[]"  checked />`;
                                }
                            },
                            {
                                "data": "archiveId", "orderable": false, "searchable": false, "render": function (data, type, row, meta) {
                                    var available = row.trxArchiveOutIndicators.length > 0 ? row.trxArchiveOutIndicators[0].returnDate != null ? true : false : true;
                                    console.log(row.trxArchiveOutIndicators[0].returnDate);
                                    var value = available ? '' : row.trxArchiveOutIndicators[0].usedBy;
                                    return `<input type="text" class="form-control" value='${value}' name="usedBy[]" ${available ? '' : 'readonly'} />`;
                                }
                            },
                            {
                                "data": "archiveId", "orderable": false, "searchable": false, "render": function (data, type, row, meta) {
                                    var available = row.trxArchiveOutIndicators.length > 0 ? row.trxArchiveOutIndicators[0].returnDate != null ? true : false : true;
                                    var value = available ? '' : row.trxArchiveOutIndicators[0].usedDate.split('T')[0];
                                    return `<input type="date" class="form-control" value='${value}' name="usedDate[]" ${available ? '' : 'readonly'} />`;
                                }
                            },
                            {
                                "data": "archiveId", "orderable": false, "searchable": false, "render": function (data, type, row, meta) {
                                    return `<input type="date" class="form-control" value='' name="returnDate[]" />`;
                                }
                            },
                            {
                                "data": "archiveId", "orderable": false, "searchable": false, "render": function (data, type, row, meta) {
                                    var available = row.trxArchiveOutIndicators.length > 0 ? row.trxArchiveOutIndicators[0].returnDate != null ? true : false : true;
                                    return `<span class="badge badge-pill badge-${available ? 'primary' : 'success'}">${available ? 'Tersedia' : 'Digunakan'}</span>`;
                                }
                            }
                        ]
                    });
                }else{
                    $('#table-archive').DataTable({
                        data: dataRes,
                        lengthMenu: [100],
                        columnDefs: [
                            {
                                targets: [8],
                                className: `text-center ${@form.isInput.ToString().ToLower() ? '' : 'd-none'}`
                            },
                            {
                                targets: [8],
                                orderDataType: 'dom-checkbox'
                            }
                        ],
                        columns: [
                            {
                                "data": "archiveId", "orderable": false, "searchable": false, "render": function (data, type, row, meta) {
                                    return meta.row + meta.settings._iDisplayStart + 1;
                                }
                            },
                            { "data": "subSubjectClassification.subSubjectClassificationName", "name": "subSubjectClassification.subSubjectClassificationName", "autoWidth": true },
                            { "data": "archiveCode", "name": "archiveCode", "autoWidth": true },
                            { "data": "titleArchive", "name": "titleArchive", "autoWidth": true },
                            { "data": "archiveType.archiveTypeName", "name": "archiveType.archiveTypeName", "autoWidth": true },
                            { "data": "creator.creatorName", "name": "creator.creatorName", "autoWidth": true },
                            { "data": "volume", "name": "volume", "autoWidth": true },
                            {
                                "data": "archiveId", "orderable": false, "searchable": false, "render": function (data, type, row, meta) {
                                    var modal = `<div id="myModal${data}" class="modal fade" aria-hidden="true">
                                                        <div class="modal-dialog modal-lg">
                                                            <div class="modal-content">
                                                                <div class="modal-header">
                                                                    <h2 class="modal-title">Preview</h2>
                                                                </div>
                                                                <div class="modal-body">
                                                                    <div class="row">
                                                                        <div class="col-lg-12">
                                                                                    <object data="@Url.Action(GlobalConst.DetailArchive, GlobalConst.MediaStorage, new { Area = GlobalConst.ArchiveActive, Id = "-1AingMaung" })" style="width:100%; height:500px">
                                                                                        <embed src="@Url.Action(GlobalConst.DetailArchive, GlobalConst.MediaStorage, new { Area = GlobalConst.ArchiveActive, Id = "-1AingMaung" })" style="width:100%;height:500px" />
                                                                            </object>
                                                                        </div>
                                                                    </div>
                                                                    <hr />
                                                                </div>
                                                            </div>
                                                        </div>
                                                            </div>`.replace('-1AingMaung', data);
                                    return modal + `<a data-toggle="modal" href="#myModal${data}" class="btn btn-sm btn-warning"><i class="fa fa-eye"></i> </a>`;
                                }
                            },
                            {
                                "data": "archiveId", "orderable": false, "searchable": false, "render": function (data, type, row, meta) {
                                    var rowChecked = row.trxMediaStorageDetails.length > 0 ? row.trxMediaStorageDetails[0].mediaStorageId == '@Model.MediaStorageId' : false;
                                    return `<input type="checkbox" class="check" value='${data}' data-volume="${row.volume}" name="detail[]" onchange="checkValidate($(this), ${row.volume})" ${rowChecked ? 'checked' : ''} />`;
                                }
                            }
                        ]
                    });
                }
                $('#data-table').toggleClass('sk-loading');
            });
        }

        function initDropdown() {
            $('#txtGMDDetail').select2({
                minimumInputLength: 0,
                theme: 'bootstrap4',
                allowClear: true,
                ajax: {
                    url: '@Url.Action(GlobalConst.BindGMDDetailByTypeStorageId, GlobalConst.MediaStorage, new { Area = GlobalConst.ArchiveActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            param: params.term, id: $('#txtTypeStorageId').val()
                        }
                        return query;
                    },
                    processResults: function (data) {
                        return {
                            results: data
                        };
                    }
                }
            });

            $('#txtArchiveId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Archive --',
                ajax: {
                    url: '@Url.Action(GlobalConst.BindArchivesBySubSubjectClassificationId, GlobalConst.MediaStorage, new { Area = GlobalConst.ArchiveActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            id: $('#txtSubSubjectClassificationId').val(),
                        }
                        return query;
                    },
                    processResults: function (data) {
                        var dataResult = $.map(data, function (item) {
                            return {
                                text: item.titleArchive,
                                id: item.archiveId
                            }
                        });
                        return {
                            results: dataResult
                        };
                    }
                }
            });

            $('#txtArchiveUnitId').on('change', function () {
                $('#txtTypeStorageId').val('').trigger('change');
                $('#txtFloorId').val('').trigger('change');
                $('#txtSubSubjectClassificationId').val('').trigger('change');
                $("#listdtl").empty();
                listArchiveId = [];
                $("#txtTotalVolume").val(0);
                $("#txtDifferenceVolume").val(0);
            });
            $('#txtSubSubjectClassificationId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Subject Classification --',
                ajax: {
                    url: '@Url.Action(GlobalConst.BindSubjectClassificationByArchiveUnitId, GlobalConst.MediaStorage, new { Area = GlobalConst.ArchiveActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            id: $('#txtArchiveUnitId').val(),
                            param: params.term
                        }
                        return query;
                    },
                    processResults: function (data) {
                        var dataResult = $.map(data, function (item) {

                            return {
                                text: item.subjectClassificationName,
                                id: item.subjectClassificationId
                            }
                        });
                        return {
                            results: dataResult
                        };
                    }
                }
            });
            $('#txtTypeStorageId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Type Storage --',
                ajax: {
                    url: '@Url.Action(GlobalConst.BindTypeStorageByArchiveUnitId, GlobalConst.MediaStorage, new { Area = GlobalConst.ArchiveActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            id: $('#txtArchiveUnitId').val(),
                            param: params.term
                        }
                        return query;
                    },
                    processResults: function (data) {
                        var dataResult = $.map(data, function (item) {

                            return {
                                text: item.typeStorageName,
                                id: item.typeStorageId
                            }
                        });
                        return {
                            results: dataResult
                        };
                    }
                }
            });
            $('#txtFloorId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Floor --',
                ajax: {
                    url: '@Url.Action(GlobalConst.BindFloorsByArchiveUnitId, GlobalConst.MediaStorage, new { Area = GlobalConst.ArchiveActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            id: $('#txtArchiveUnitId').val(),
                            param: params.term
                        }
                        return query;
                    },
                    processResults: function (data) {
                        var dataResult = $.map(data, function (item) {
                            return {
                                text: item.floorName,
                                id: item.floorId
                            }
                        });
                        return {
                            results: dataResult
                        };
                    }
                }
            });

            $('#txtFloorId').on('change', function () {
                $('#txtRoomId').val('').trigger('change');
            });
            $('#txtRoomId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Floor --',
                ajax: {
                    url: '@Url.Action(GlobalConst.BindRoomActiveByFloorId, GlobalConst.MediaStorage, new { Area = GlobalConst.ArchiveActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            id: $('#txtFloorId').val(),
                            param: params.term
                        }
                        return query;
                    },
                    processResults: function (data) {
                        var dataResult = $.map(data, function (item) {
                            return {
                                text: item.roomName,
                                id: item.roomId
                            }
                        });
                        return {
                            results: dataResult
                        };
                    }
                }
            });

            $('#txtRoomId').on('change', function () {
                $('#txtRackId').val('').trigger('change');
            });
            $('#txtRackId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Floor --',
                ajax: {
                    url: '@Url.Action(GlobalConst.BindRackByRoomId, GlobalConst.MediaStorage, new { Area = GlobalConst.ArchiveActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            id: $('#txtRoomId').val(),
                            param: params.term
                        }
                        return query;
                    },
                    processResults: function (data) {
                        var dataResult = $.map(data, function (item) {
                            return {
                                text: item.rackName,
                                id: item.rackId
                            }
                        });
                        return {
                            results: dataResult
                        };
                    }
                }
            });

            $('#txtRackId').on('change', function () {
                $('#txtLevelId').val('').trigger('change');
            });
            $('#txtLevelId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Floor --',
                ajax: {
                    url: '@Url.Action(GlobalConst.BindLevelByRackId, GlobalConst.MediaStorage, new { Area = GlobalConst.ArchiveActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            id: $('#txtRackId').val(),
                            param: params.term
                        }
                        return query;
                    },
                    processResults: function (data) {
                        var dataResult = $.map(data, function (item) {
                            return {
                                text: item.levelName,
                                id: item.levelId
                            }
                        });
                        return {
                            results: dataResult
                        };
                    }
                }
            });

            $('#txtLevelId').on('change', function () {
                $('#txtRowId').val('').trigger('change');
            });
            $('#txtRowId').select2({
                theme: 'bootstrap4',
                allowClear: true,
                placeholder: '-- Select Floor --',
                ajax: {
                    url: '@Url.Action(GlobalConst.BindRowArchiveByLevelId, GlobalConst.MediaStorage, new { Area = GlobalConst.ArchiveActive })',
                    type: "POST",
                    data: function (params) {
                        var query = {
                            id: $('#txtLevelId').val(),
                            param: params.term
                        }
                        return query;
                    },
                    processResults: function (data) {
                        var dataResult = $.map(data, function (item) {
                            return {
                                text: item.rowName,
                                id: item.rowId
                            }
                        });
                        return {
                            results: dataResult
                        };
                    }
                }
            });
        }

        function getTypeStorageById(id) {
            var url = '@Url.Action(GlobalConst.BindTypeStorageById, form.CurrentController, new { Area = form.CurrentArea })';
            $.ajax({
                url: url,
                type: "@GlobalConst.GET",
                data: { Id: id },
                dataType: "@GlobalConst.JSON",
                contentType: "@GlobalConst.APPLICATIONJSON",
                success: function (data) {
                    $("#txtTotalVolume").val(data.volume);
                    $("#txtDifferenceVolume").val(data.volume);
                },
                error: function () {
                    alert("Type Storage Not Found");
                }
            });
        }

        function deleteArchive(row, id, volume) {
            var index = listArchiveId.indexOf(id);
            if (index >= 0) {
                listArchiveId.splice(index, 1);
            }
            row.closest('tr').remove();

            $("#txtDifferenceVolume").val(parseInt($("#txtDifferenceVolume").val()) + parseInt(volume));
        }

        function validateArchive(archiveId) {
            for (i in listArchiveId) {
                if (listArchiveId[i] == archiveId) {
                    return false;
                }
            }
            return true;
        }

        function validate() {
            let result = true;
            if (listArchiveId.length == 0) {
                swal("Please input Archive!");
                result = false;
            }
            if ($('#txtRowId').val() == "") {
                swal("Please select Row!");
                result = false;
            }
            if ($('#txtDifferenceVolume').val() == "") {
                swal("Please enter Difference Volume!");
                result = false;
            }
            if ($('#txtTotalVolume').val() == "") {
                swal("Please enter Total Volume!");
                result = false;
            }
            if ($('#txtTypeStorageId').val() == "") {
                swal("Please select Type Storage!");
                result = false;
            }
            if ($('#txtArchiveUnitId').val() == "") {
                swal("Please select Archive Unit!");
                result = false;
            }
            if ($('#txtMediaStorageName').val() == "") {
                swal("Please enter Media Storage Name!");
                result = false;
            }
            if ($('#txtMediaStorageCode').val() == "") {
                swal("Please enter Media Storage Code!");
                result = false;
            }
            return result;
        }

        function initBtnDeleteArchive() {
            $(".btn-delete-archive").show();
            if ("@isEditable" === "False") {
                $(".btn-delete-archive").hide();
            }
        }

        function resetTableArchive() {
            $("#listdtl").empty();
            listArchiveId = [];
        }

        function getStatusSubmit(status) {
            $("#txtStatusId").val("1");
            if (status == "submit") {
                $("#txtStatusId").val("5");
            }
        }

        function onSubmit(ctl, event, status) {
            listArchiveId.forEach((element) => {
                $("#listArchiveId").append(`<input name=detail[] type=hidden value=${element} >`);
            });

            console.table(listArchiveId);

            getStatusSubmit(status);

            event.preventDefault();
            swal({
                title: "Do You Want To " + "@form.CurrentAction" + " It?",
                text: "Please check Information before Submiting!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Save",
                cancelButtonText: "Cancel",
                closeOnConfirm: false,
                closeOnCancel: false
            },
                function (isConfirm) {
                    if (isConfirm) {
                        if (validate() == true) {
                            $('.confirm').prop('disabled', true);
                            $('.cancel').prop('disabled', true);
                            $('.cancel').hide();
                            $("#formInput").submit();
                        }
                    } else {
                        swal("Cancelled", "You have Cancelled Form Submission!", "error");
                    }
                });
        }
    </script>
}