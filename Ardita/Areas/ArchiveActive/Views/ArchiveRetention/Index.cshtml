@using Ardita.Globals;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Retensi Arsip</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Home")"><i class="fa fa-home"></i></a>
            </li>
            <li class="breadcrumb-item">
                Archive Active
            </li>
            <li class="active breadcrumb-item">
                <strong>Retensi Arsip</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h5>Retensi Arsip</h5>
                    <div class="ibox-tools">
                    </div>
                </div>
                <div class="ibox-content">
                    <table id="tbl" class="table table-striped table-hover dataTables-example" style="width:100%">
                        <thead>
                            <tr>
                                <th>No</th>
                                <th>Action</th>
                                <th>Nomor Arsip</th>
                                <th>Nama Arsip</th>
                                <th>Jenis Arsip</th>
                                <th>Pemilik</th>
                                <th>Tanggal Retensi</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">

        $(document).ready(function () {
            bsCustomFileInput.init();
            var table = $('#tbl').DataTable({
                processing: true,
                serverSide: true,
                scrollX: true,
                filter: true,
                ajax: {
                    "url": '@Url.Action(Const.GetData, Const.ArchiveRetention, new { Area = Const.ArchiveActive })',
                    "type": "POST",
                    "datatype": "json",
                    //"complete": function (xhr, responseText) {
                    //    console.log(xhr);
                    //    console.log(responseText); //*** responseJSON: Array[0]
                    //}
                },
                columnDefs: [
                    { width: 50, targets: 0 },
                    { width: 120, targets: 6 }
                ],
                fixedColumns: true,
                columns: [
                    {
                        "data": "archiveId", "orderable": false, "searchable": false, "render": function (data, type, row, meta) {
                            //console.log(row);
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    {
                        "data": "archiveId", "orderable": false, "searchable": false,
                        "render": function (data, type, row, meta) {
                            var detail = `<a class="btn btn-sm btn-warning" href="@Url.Action(Const.Detail, Const.ArchiveRetention, new { Area = Const.ArchiveActive, Id = -1 })"><i class="fa fa-eye"></i> </a>`;
                            detail = detail.replace("-1", row.archiveId);

                            return detail;
                        }
                    },
                    { "data": "archiveId", "autoWidth": true },
                    { "data": "titleArchive", "autoWidth": true },
                    { "data": "archiveType", "autoWidth": true },
                    { "data": "creatorName", "autoWidth": true },
                    { "data": "retentionDateArchive", "name": "titleArchive", "autoWidth": true },
                    {
                        "data": "status", "autoWidth": true, "render": function (data, type, row, meta) {
                            var badge = 'badge-primary';

                            var status = data.toLowerCase();
                            if (status.contains('pemindahan')) {
                                badge = 'badge-success';
                            }
                            if (status.contains('pemusnahan')) {
                                badge = 'badge-info';
                            }
                            if (status.contains('perpanjangan')) {
                                badge = 'badge-primary';
                            }
                            if (status.contains('tindak')) {
                                badge = 'badge-warning';
                            }
                            if (status.contains('expired')) {
                                badge = 'badge-danger';
                            }
                            return `<span class="badge ${badge}" style="width:100%">${data}</span>`;
                        }
                    },
                ]
            });
        });
    </script>
}